apply plugin: 'groovy'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    maven { url 'http://bits.netbeans.org/maven2' }
    maven { url 'https://repo.jenkins-ci.org/releases/' }
    jcenter()
    maven { url 'https://mvnrepository.com/artifact/' }

}

configurations {
    testPlugins {}
}

// In this section you declare the dependencies for your production and test code
dependencies {
    compile 'org.slf4j:slf4j-api:1.7.22'
    compile 'org.codehaus.groovy:groovy-all:2.4.11'
    // Jenkis Pipeline JUnit
    testCompile group:'com.lesfurets', name:'jenkins-pipeline-unit', version:'1.1'
    testCompile group: 'junit', name: 'junit', version: '4.11'

  compile "org.jenkins-ci.plugins:job-dsl-core:1.66"

  // Jenkins groovy dsl
  testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
  testCompile 'cglib:cglib-nodep:2.2.2' // used by Spock

  // Jenkins test harness dependencies
  testCompile 'org.jenkins-ci.main:jenkins-test-harness:2.9'
  testCompile "org.jenkins-ci.main:jenkins-war:2.9"
  testCompile "org.jenkins-ci.main:jenkins-war:2.9:war-for-test@jar"

  // Job DSL plugin including plugin dependencies
  testCompile "org.jenkins-ci.plugins:job-dsl:1.66"
  testCompile "org.jenkins-ci.plugins:job-dsl:1.66@jar"
  testCompile 'org.jenkins-ci.plugins:structs:1.6@jar'
  testCompile 'org.jenkins-ci.plugins:cloudbees-folder:5.12@jar'

  // plugins to install in test instance
  testPlugins 'org.jenkins-ci.plugins:ghprb:1.31.4'
  testPlugins 'com.coravy.hudson.plugins.github:github:1.19.0'
  testPlugins 'org.jenkins-ci.plugins:cloudbees-folder:5.12'
  testPlugins 'org.jenkins-ci.plugins:credentials:2.1.10'
  testPlugins 'org.jenkins-ci.plugins.workflow:workflow-aggregator:2.5'

}

sourceSets {
    jobs {
        groovy {
            srcDirs 'jobs'
            compileClasspath += main.compileClasspath
        }
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

task resolveTestDslPlugins(type: Copy) {
    from configurations.testPlugins
    into new File(sourceSets.test.output.resourcesDir, 'test-dependencies')
    include '*.hpi'
    include '*.jpi'
    def mapping = [:]

    doFirst {
        configurations.testPlugins.resolvedConfiguration.resolvedArtifacts.each {
            mapping[it.file.name] = "${it.name}.${it.extension}"
        }
    }
    rename { mapping[it] }

    doLast {
        List<String> baseNames = source*.name.collect { mapping[it] }.collect { it[0..it.lastIndexOf('.') - 1] }
        new File(destinationDir, 'index').setText(baseNames.join('\n'), 'UTF-8')
    }
}

test {
    dependsOn tasks.resolveTestDslPlugins
    inputs.files sourceSets.jobs.groovy.srcDirs

    // set build directory for Jenkins test harness, JENKINS-26331
    systemProperty 'buildDirectory', project.buildDir.absolutePath
}
